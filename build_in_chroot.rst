============================================
Πώς χτίζουμε σε fakeroot (chroot) περιβάλλον
============================================

Πλεονεκτήματα
=============

Πολλοί θα αναρωτηθούν ποιος ο λόγος να χτίζουμε σε chroot environment αντί του δικού μας. Οι βασικοί λόγοι συνοψίζονται στα παρακάτω:

#. Διασφαλίζεται σωστό πακετάρισμα έτσι ώστε το πακέτο να παίζει σε όλα τα μηχανήματα, κάτι το οποίο επιβάλλεται όταν πρόκειται για δικά μας πακέτα που χρησιμοποιούν και άλλοι.
#. Έχουμε τη δυνατότητα να χτίσουμε το **ίδιο πακέτο** και για τις **2 αρχιτεκτονικές** στο **ίδιο μηχάνημα**. 
#. Μπορούμε να πειράξουμε τα flags στο ``makepkg.conf`` του fakeroot όπως μας αρέσει χωρίς να επηρρεαστεί το κυρίως σύστημά μας.

Στην πορεία του χτισίματος θα δούμε πως εφαρμόζονται τα παραπάνω.

Το πακέτο devtools
==================

Οι developers του Arch μάς έχουν κάνει τη ζωή εύκολη με το πακέτο ``devtools`` που στη ουσία είναι ένα πακέτο από scripts για την αυτόματη δημιουργία fakeroot environments καθώς και το χτίσιμο των πακέτων μέσα σε αυτά.
Αρχικά το εγκαθιστούμε με ::

		# pacman -S devtools

Το πακέτο αυτό εγκαθιστά στο ``/usr/bin`` τα παρακάτω scripts ::

		extra-i686-build
		extra-x86_64-build
		testing-i686-build
		testing-x86-64-build
		staging-i686-build
		staging-x86_64-build
		gnome-unstable-i686-build
		gnome-unstable-x86_64-build
		kde-unstable-i686-build
		kde-unstable-x86-64-build
		multilib-build
		multilib-testing-build
		multilib-staging-build
		
τα οποία είναι στην ουσία symlinks του  ``/usr/bin/archbuild``.
Εμείς θα χρησιμοποιήσουμε τα δύο πρώτα: ``extra-i686-build & extra-x86_64-build``.

Χρήση του archbuild
===================

Η συνήθης διαδικασία που ακολουθούσαμε μέχρι τώρα για να χτίσουμε το πακέτο ``foo``, του οποίου το PKGBUILD βρίσκεται πχ. στο ``/home/user/foo`` ήταν η εξής ::
	
		cd /home/user/foo
		makepkg
		
Όταν χτίζουμε σε chroot το μόνο που αλλάζει είναι η εντολή ``makepkg`` σε ``extra-i686-build`` ή ``extra-x86_64-build``, 
αν χτίζουμε για 32bits ή 64bits αντίστοιχα.

.. warning:: 
	
	Σε ένα σύστημα ``x86_64`` μπορούμε να χτίσουμε με ``chroot`` και για τις 2 αρχιτεκτονικές. Σε ένα σύστημα ``i686`` μπορούμε να χτίσουμε *μόνο* για ``i686``.




